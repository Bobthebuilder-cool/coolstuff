{"version":3,"sources":["useWebcam.js","useModel.js","useBoxRenderer.js","index.js","styles.module.css"],"names":["useWebcam","videoRef","_useState","useState","_useState2","Object","slicedToArray","webcamLoaded","setWebcamLoaded","useEffect","navigator","mediaDevices","getUserMedia","audio","video","facingMode","then","stream","current","srcObject","onloadedmetadata","useModel","modelPath","model","setModel","objectDetector","load","cnt","points","renderPredictions","predictions","canvasRef","ctx","getContext","clearRect","canvas","width","height","font","textBaseline","forEach","prediction","timer","console","log","x","bbox","y","fillStyle","fillText","scoreText","score","toFixed","class","getLabelText","clearTimeout","document","getElementById","classList","add","reduceBar","speakWarn","el","contains","setTimeout","remove","factor","jsBar","innerHTML","style","synth","window","speechSynthesis","pitch","utter","SpeechSynthesisUtterance","lang","speak","addEventListener","detectFrame","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","detect","sent","requestAnimationFrame","stop","_x","_x2","_x3","apply","this","arguments","useBoxRenderer","shouldRender","App","useRef","cameraLoaded","process","react_default","createElement","className","styles","pageTitle","descTxt","fixed","autoPlay","playsInline","muted","ref","rootElement","ReactDOM","render","src_App","module","exports","vidContainer","score-bar"],"mappings":"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","file":"static/js/main.d8811143.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\n\nconst useWebcam = videoRef => {\n  const [webcamLoaded, setWebcamLoaded] = useState(false)\n  useEffect(() => {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices\n        .getUserMedia({\n          audio: false,\n          video: {\n            facingMode: 'user'\n          }\n        })\n        .then(stream => {\n          // window.stream = stream\n          videoRef.current.srcObject = stream\n          videoRef.current.onloadedmetadata = () => {\n            setWebcamLoaded(true)\n          }\n        })\n    }\n  }, [videoRef])\n  return webcamLoaded\n}\n\nexport default useWebcam\n","import { useEffect, useState } from 'react'\n\nimport objectDetector from '@cloud-annotations/object-detection'\n\nconst useModel = modelPath => {\n  const [model, setModel] = useState()\n  useEffect(() => {\n    objectDetector.load(modelPath).then(model => {\n      setModel(model)\n    })\n  }, [modelPath])\n  return model\n}\n\nexport default useModel\n","import { useEffect } from 'react'\n\nconst SCORE_DIGITS = 4\nlet cnt = 0;\nlet points = 100;\n\nconst getLabelText = (prediction) => {\n    const scoreText = prediction.score.toFixed(SCORE_DIGITS)\n    return prediction.class + ', score: ' + scoreText\n}\n\nconst renderPredictions = (predictions, canvasRef) => {\n  \n  const ctx = canvasRef.current.getContext('2d')\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n  // Font options.\n  const font = '16px sans-serif'\n  ctx.font = font\n  ctx.textBaseline = 'top'\n  // predictions.forEach(prediction => {\n  //   const x = prediction.bbox[0]\n  //   const y = prediction.bbox[1]\n  //   const width = prediction.bbox[2]\n  //   const height = prediction.bbox[3]\n  //   // Draw the bounding box.\n  //   ctx.strokeStyle = '#00FFFF'\n  //   ctx.lineWidth = 4\n  //   ctx.strokeRect(x, y, width, height)\n  //   // Draw the label background.\n  //   ctx.fillStyle = '#00FFFF'\n  //   const textWidth = ctx.measureText(getLabelText(prediction)).width\n  //   const textHeight = parseInt(font, 10) // base 10\n  //   ctx.fillRect(x, y, textWidth + 4, textHeight + 4)\n  // })\n\n  predictions.forEach(prediction => {\n    var timer;\n    console.log(prediction)\n    const x = prediction.bbox[0]\n    const y = prediction.bbox[1]\n    // Draw the text last to ensure it's on top.\n    ctx.fillStyle = '#000000'\n    ctx.fillText(getLabelText(prediction), x, y)\n    clearTimeout(timer);\n    \n    if(prediction.class===\"Touch-Face\" && prediction.score > 0.75){\n      cnt++;\n      points = points-5;\n      if(points === 0){\n        document.getElementById(\"js-reset\").classList.add(\"show\");\n      }\n      if(points>=0){\n        reduceBar(points);\n      }\n      \n      console.log(\"val \",cnt)\n      if(cnt < 2){\n        speakWarn();\n        \n      }\n      let el = document.getElementById(\"js-body\");\n      if(!el.classList.contains(\"error\")){\n        el.classList.add(\"error\");\n        timer = setTimeout(function(){\n          el.classList.remove(\"error\");\n          cnt = 0;\n        },1500)\n      }\n     \n    }\n  })\n}\nconst reduceBar = (factor) =>{\n  var jsBar = document.getElementById(\"js-bar\");\n  var jsPoint = document.getElementById(\"js-point\");\n  jsPoint.innerHTML = factor;\n   console.log(factor)\n    jsBar.style.width = factor+\"%\";\n  \n}\nconst speakWarn = () =>{\n  const synth = window.speechSynthesis\n  synth.pitch = 8;\n  //synth.rate = 10;\n  \n  const utter = new SpeechSynthesisUtterance(\"Don't touch your face\")\n  //const voices = speechSynthesis.getVoices()\n  \n  utter.lang = 'en-EN';\n  utter.pitch = 1;\n\n  synth.speak(utter);\n}\ndocument.getElementById(\"js-reset\").addEventListener(\"click\",function(){\n  points = 100;\n  reduceBar(points);\n  document.getElementById(\"js-reset\").classList.remove(\"show\");\n})\nconst detectFrame = async (model, videoRef, canvasRef) => {\n  const predictions = await model.detect(videoRef.current)\n  renderPredictions(predictions, canvasRef)\n  requestAnimationFrame(() => {\n    detectFrame(model, videoRef, canvasRef)\n  })\n}\n\nconst useBoxRenderer = (model, videoRef, canvasRef, shouldRender) => {\n  useEffect(() => {\n    if (model && shouldRender) {\n      detectFrame(model, videoRef, canvasRef)\n    }\n  }, [canvasRef, model, shouldRender, videoRef])\n}\n\nexport default useBoxRenderer","import React, { useRef } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport useWebcam from './useWebcam'\nimport useModel from './useModel'\nimport useBoxRenderer from './useBoxRenderer'\n\n\nimport styles from './styles.module.css'\n\nconst MODEL_PATH = process.env.PUBLIC_URL + '/model_web'\n\nconst App = () => {\n  const videoRef = useRef()\n  const canvasRef = useRef()\n\n  const cameraLoaded = useWebcam(videoRef)\n  const model = useModel(MODEL_PATH)\n  useBoxRenderer(model, videoRef, canvasRef, cameraLoaded)\n  \n  return (\n    <div>\n      <h2 className={styles.pageTitle}>\n        Prototype Face-Touch\n      </h2>\n      <div className={styles.descTxt}>\n      Face-touch prototype: as you can get the Coronavirus 2019 from touching areas around your mouth, eyes, and nose, it is advised to try your best to not touch your face. This program alerts you if you touch your face, or if you are about to touch it. As this is still a prototype, a few false alarms might occur, though it will accurately alert you when you are actually about to or have touched your face. If you want to run it in the background, you can open a tab and then open another separated tab where the face-touch tab will be behind the tab which you can do your work on. If you touch your face, the alert will possibly continually be called out. In that case, you can wait until the program recognizes a decreased threat and stops, reposition your computer, or you can reload this page. Note that this program might take a few seconds to initialize. \n      </div>\n        \n      <video\n        className={styles.fixed}\n        autoPlay\n        playsInline\n        muted\n        ref={videoRef}\n        width=\"600\"\n        height=\"400\"\n      />\n      <canvas\n        className={styles.fixed}\n        ref={canvasRef}\n        width=\"600\"\n        height=\"400\"\n      />\n\n      {/* <button onClick={()=>speakTest()} > Click</button>  */}\n     \n    </div>\n  )\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fixed\":\"styles_fixed__v-bnh\",\"pageTitle\":\"styles_pageTitle__3IVuI\",\"descTxt\":\"styles_descTxt__2JAX4\",\"vidContainer\":\"styles_vidContainer__34qtC\",\"score-bar\":\"styles_score-bar__2Hf6e\"};"],"sourceRoot":""}